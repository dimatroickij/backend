apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${CI_PROJECT_NAME}
spec:
  selector:
    matchLabels:
      app: ${CI_PROJECT_NAME}
  replicas: 1
  template:
    metadata:
      labels:
        app: ${CI_PROJECT_NAME}
    spec:
      containers:
      - image: ${IMAGE_TAG}
        name: ${CI_PROJECT_NAME}
        ports:
        - containerPort: 80
        env:
        - name: PUBCLIC_SUBPATH
          value: "${PUBCLIC_SUBPATH}"

---

apiVersion: v1
kind: Service
metadata:
  name: ${CI_PROJECT_NAME}
spec:
  selector:
    app: ${CI_PROJECT_NAME}
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  type: ClusterIP
status:
  loadBalancer: {}

---

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ${CI_PROJECT_NAME}
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-buffering: "on"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "64k"
    nginx.ingress.kubernetes.io/proxy-buffers: "64k"
    nginx.ingress.kubernetes.io/proxy-busy-buffers: "64k"
    nginx.ingress.kubernetes.io/fastcgi-buffer-size: "32k"
    nginx.ingress.kubernetes.io/fastcgi-buffers: "4"
    nginx.ingress.kubernetes.io/rewrite-target: ${REWRITE_TARGET}
spec:
  rules:
  - http:
      paths:
      - path: ${PATH_PREFIX}
        pathType: Prefix
        backend:
          serviceName: ${CI_PROJECT_NAME}
          servicePort: 80